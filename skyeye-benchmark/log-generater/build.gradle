apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'maven'
apply plugin: 'org.springframework.boot'
apply plugin: 'application'

group = 'skyeye'
applicationName = 'log-generater'
version = '1.3.0'

sourceCompatibility = 1.8
targetCompatibility = 1.8
compileJava.options.encoding = 'UTF-8'
buildDir = 'target'

repositories {
  mavenLocal()
  maven { url "http://nexus.5dg.co/repository/maven-public" }
  maven { url "http://nexus.5dg.co/repository/maven-releases" }
  maven { url "http://nexus.5dg.co/repository/maven-snapshots" }
  mavenCentral()
}

ext {
  clientVersion = '1.3.0'
}

dependencies {
  compile "com.gravity.bigbrother:skyeye-client-logback:0.0.1"
  compile "org.springframework.boot:spring-boot-starter"

  testCompile "org.springframework.boot:spring-boot-starter-test"
}

configurations {
  compile.exclude group: "log4j", module: "log4j"
  compile.exclude group: "org.slf4j", module: "slf4j-log4j12"
  compile.exclude group: "org.springframework", module: "spring-web"
}

mainClassName = 'com.jthink.skyeye.benchmark.log.generater.launcher.Launcher'

buildscript {
  ext {
    springBootVersion = '1.5.6.RELEASE'
  }

  repositories {
    mavenLocal()
    maven { url "http://nexus.5dg.co/repository/maven-publics" }
    mavenCentral()
  }

  dependencies {
    classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    classpath("io.spring.gradle:dependency-management-plugin:1.0.3.RELEASE")
  }
}

startScripts {
  doLast {
    unixScript.text = unixScript.text.replaceAll("lib/(.*)\n", "lib/\\*")
  }
}
